<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\peripherals_app.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\peripherals_app.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Sat Nov 13 19:50:18 2021
<BR><P>
<H3>Maximum Stack Usage =        216 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; start_cmd_line &rArr; __0scanf &rArr; __vfscanf_char_file &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[12]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">SysTick_Handler</a><BR>
 <LI><a href="#[1c]">ENT_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ENT_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[d]">BusFault_Handler</a> from gowin_m3_it.o(i.BusFault_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[10]">DebugMon_Handler</a> from gowin_m3_it.o(i.DebugMon_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[1c]">ENT_Handler</a> from startup_gowin_m3.o(.text) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[23]">GPIO0_0_Handler</a> from gowin_m3_it.o(i.GPIO0_0_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[2d]">GPIO0_10_Handler</a> from gowin_m3_it.o(i.GPIO0_10_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[2e]">GPIO0_11_Handler</a> from gowin_m3_it.o(i.GPIO0_11_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[2f]">GPIO0_12_Handler</a> from gowin_m3_it.o(i.GPIO0_12_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[30]">GPIO0_13_Handler</a> from gowin_m3_it.o(i.GPIO0_13_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[31]">GPIO0_14_Handler</a> from gowin_m3_it.o(i.GPIO0_14_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[32]">GPIO0_15_Handler</a> from gowin_m3_it.o(i.GPIO0_15_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[24]">GPIO0_1_Handler</a> from gowin_m3_it.o(i.GPIO0_1_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[25]">GPIO0_2_Handler</a> from gowin_m3_it.o(i.GPIO0_2_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[26]">GPIO0_3_Handler</a> from gowin_m3_it.o(i.GPIO0_3_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[27]">GPIO0_4_Handler</a> from gowin_m3_it.o(i.GPIO0_4_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[28]">GPIO0_5_Handler</a> from gowin_m3_it.o(i.GPIO0_5_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[29]">GPIO0_6_Handler</a> from gowin_m3_it.o(i.GPIO0_6_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[2a]">GPIO0_7_Handler</a> from gowin_m3_it.o(i.GPIO0_7_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[2b]">GPIO0_8_Handler</a> from gowin_m3_it.o(i.GPIO0_8_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[2c]">GPIO0_9_Handler</a> from gowin_m3_it.o(i.GPIO0_9_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[17]">GPIO0_Handler</a> from gowin_m3_it.o(i.GPIO0_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[b]">HardFault_Handler</a> from gowin_m3_it.o(i.HardFault_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[1a]">I2C_Handler</a> from startup_gowin_m3.o(.text) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[1d]">Interrupt10_Handler</a> from startup_gowin_m3.o(.text) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[1e]">Interrupt11_Handler</a> from startup_gowin_m3.o(.text) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[1f]">Interrupt12_Handler</a> from startup_gowin_m3.o(.text) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[20]">Interrupt13_Handler</a> from startup_gowin_m3.o(.text) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[21]">Interrupt14_Handler</a> from startup_gowin_m3.o(.text) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[22]">Interrupt15_Handler</a> from startup_gowin_m3.o(.text) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[1b]">Interrupt8_Handler</a> from startup_gowin_m3.o(.text) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[c]">MemManage_Handler</a> from gowin_m3_it.o(i.MemManage_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[a]">NMI_Handler</a> from gowin_m3_it.o(i.NMI_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[11]">PendSV_Handler</a> from gowin_m3_it.o(i.PendSV_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[19]">RTC_Handler</a> from startup_gowin_m3.o(.text) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[9]">Reset_Handler</a> from startup_gowin_m3.o(.text) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[f]">SVC_Handler</a> from gowin_m3_it.o(i.SVC_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[12]">SysTick_Handler</a> from startup_gowin_m3.o(.text) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[43]">SystemInit</a> from system_gowin_m3.o(i.SystemInit) referenced from startup_gowin_m3.o(.text)
 <LI><a href="#[15]">TIMER0_Handler</a> from startup_gowin_m3.o(.text) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[16]">TIMER1_Handler</a> from gowin_m3_it.o(i.TIMER1_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[13]">UART0_Handler</a> from app.o(i.UART0_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[14]">UART1_Handler</a> from gowin_m3_it.o(i.UART1_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[18]">UARTOVF_Handler</a> from startup_gowin_m3.o(.text) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[33]">USER_INT0_Handler</a> from gowin_m3_it.o(i.USER_INT0_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[3d]">USER_INT10_Handler</a> from gowin_m3_it.o(i.USER_INT10_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[3e]">USER_INT11_Handler</a> from gowin_m3_it.o(i.USER_INT11_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[3f]">USER_INT12_Handler</a> from gowin_m3_it.o(i.USER_INT12_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[40]">USER_INT13_Handler</a> from gowin_m3_it.o(i.USER_INT13_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[41]">USER_INT14_Handler</a> from gowin_m3_it.o(i.USER_INT14_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[42]">USER_INT15_Handler</a> from gowin_m3_it.o(i.USER_INT15_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[34]">USER_INT1_Handler</a> from gowin_m3_it.o(i.USER_INT1_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[35]">USER_INT2_Handler</a> from gowin_m3_it.o(i.USER_INT2_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[36]">USER_INT3_Handler</a> from gowin_m3_it.o(i.USER_INT3_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[37]">USER_INT4_Handler</a> from gowin_m3_it.o(i.USER_INT4_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[38]">USER_INT5_Handler</a> from gowin_m3_it.o(i.USER_INT5_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[39]">USER_INT6_Handler</a> from gowin_m3_it.o(i.USER_INT6_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[3a]">USER_INT7_Handler</a> from gowin_m3_it.o(i.USER_INT7_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[3b]">USER_INT8_Handler</a> from gowin_m3_it.o(i.USER_INT8_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[3c]">USER_INT9_Handler</a> from gowin_m3_it.o(i.USER_INT9_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[e]">UsageFault_Handler</a> from gowin_m3_it.o(i.UsageFault_Handler) referenced from startup_gowin_m3.o(RESET)
 <LI><a href="#[47]">__backspace</a> from backspace.o(.text) referenced from scanf_char_file.o(.text)
 <LI><a href="#[4c]">__main</a> from __main.o(!!!main) referenced from startup_gowin_m3.o(.text)
 <LI><a href="#[4b]">_get_lc_ctype</a> from lc_ctype_c.o(locale$$code) referenced from rt_ctype_table.o(.text)
 <LI><a href="#[48]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[49]">_scanf_char_input</a> from scanf_char.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[46]">fgetc</a> from retarget.o(i.fgetc) referenced from scanf_char_file.o(.text)
 <LI><a href="#[45]">fputc</a> from retarget.o(i.fputc) referenced from _printf_char_file.o(.text)
 <LI><a href="#[4a]">isspace</a> from isspace.o(.text) referenced from scanf_char.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[4c]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[4d]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[4f]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[83]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[84]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[50]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[85]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[51]"></a>_printf_c</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = _printf_c &rArr; _printf_char &rArr; _printf_cs_common &rArr; _printf_str
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[68]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[53]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[86]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[5b]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[87]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[88]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[55]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[89]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[8a]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[8b]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[8c]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[57]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000012))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_ctype_2 &rArr; _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[8d]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[8e]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[8f]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[90]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[91]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[92]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[93]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[94]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[95]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[96]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[97]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[98]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[99]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[9a]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[9b]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[60]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[9c]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[9d]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[9e]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[9f]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[a0]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[a1]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[a2]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[4e]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[a3]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[58]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[5a]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[a4]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[5c]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; start_cmd_line &rArr; __0scanf &rArr; __vfscanf_char_file &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[a5]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[76]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[5f]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[a6]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[61]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[9]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_gowin_m3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_gowin_m3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ENT_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gowin_m3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENT_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENT_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>I2C_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gowin_m3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>Interrupt10_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gowin_m3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>Interrupt11_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gowin_m3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>Interrupt12_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gowin_m3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>Interrupt13_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gowin_m3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>Interrupt14_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gowin_m3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>Interrupt15_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gowin_m3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>Interrupt8_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gowin_m3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>RTC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gowin_m3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIMER0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gowin_m3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>UARTOVF_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gowin_m3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>__user_initial_stackheap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, startup_gowin_m3.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[a7]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[a8]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[63]"></a>free</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, h1_free.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = free
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cmd_line
</UL>

<P><STRONG><a name="[65]"></a>__2printf</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, noretval__2printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cmd_line
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sw_edition_print
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Handler
</UL>

<P><STRONG><a name="[67]"></a>__printf</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, __printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[6c]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[69]"></a>__0scanf</STRONG> (Thumb, 26 bytes, Stack size 56 bytes, __0scanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = __0scanf &rArr; __vfscanf_char_file &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char_file
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cmd_line
</UL>

<P><STRONG><a name="[75]"></a>_scanf_string</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, _scanf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_string
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[82]"></a>strcmp</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, strcmpv7m.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cmd_line
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[a9]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[1]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[0]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[64]"></a>__rt_heap_descriptor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_heap_descriptor_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[6b]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _printf_cs_common &rArr; _printf_str
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[52]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _printf_char &rArr; _printf_cs_common &rArr; _printf_str
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[54]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[66]"></a>_printf_char_file</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, _printf_char_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ferror
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[6a]"></a>__vfscanf_char_file</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, scanf_char_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __vfscanf_char_file &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0scanf
</UL>

<P><STRONG><a name="[aa]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[72]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[ab]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[6d]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[6f]"></a>__vfscanf_char</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char_file
</UL>

<P><STRONG><a name="[4]"></a>___backspace$unlocked</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, backspace.o(.text), UNUSED)

<P><STRONG><a name="[47]"></a>__backspace</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, backspace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __backspace
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ungetc_internal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf_char_file.o(.text)
</UL>
<P><STRONG><a name="[6e]"></a>ferror</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ferror.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[59]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[4a]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, isspace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = isspace &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[70]"></a>__vfscanf</STRONG> (Thumb, 878 bytes, Stack size 96 bytes, _scanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_string
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>

<P><STRONG><a name="[71]"></a>_ungetc_internal</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, ungetc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__backspace
</UL>

<P><STRONG><a name="[ac]"></a>ungetc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ungetc.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[74]"></a>__rt_ctype_table</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rt_ctype_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
</UL>

<P><STRONG><a name="[56]"></a>__rt_locale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
</UL>

<P><STRONG><a name="[d]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gowin_m3_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>GPIO0_0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.GPIO0_0_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>GPIO0_10_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.GPIO0_10_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>GPIO0_11_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.GPIO0_11_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>GPIO0_12_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.GPIO0_12_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>GPIO0_13_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.GPIO0_13_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>GPIO0_14_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.GPIO0_14_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>GPIO0_15_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.GPIO0_15_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>GPIO0_1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.GPIO0_1_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>GPIO0_2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.GPIO0_2_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>GPIO0_3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.GPIO0_3_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>GPIO0_4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.GPIO0_4_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>GPIO0_5_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.GPIO0_5_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>GPIO0_6_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.GPIO0_6_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>GPIO0_7_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.GPIO0_7_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>GPIO0_8_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.GPIO0_8_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>GPIO0_9_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.GPIO0_9_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>GPIO0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.GPIO0_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>GPIOInit</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, app.o(i.GPIOInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GPIOInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBits
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sw_edition_print
</UL>

<P><STRONG><a name="[78]"></a>GPIO_Init</STRONG> (Thumb, 196 bytes, Stack size 20 bytes, gowin_m3_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOInit
</UL>

<P><STRONG><a name="[79]"></a>GPIO_WriteBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gowin_m3_gpio.o(i.GPIO_WriteBits))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cmd_line
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOInit
</UL>

<P><STRONG><a name="[b]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gowin_m3_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gowin_m3_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>SystemInit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_gowin_m3.o(i.SystemInit))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(.text)
</UL>
<P><STRONG><a name="[16]"></a>TIMER1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.TIMER1_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>UART0_Handler</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, app.o(i.UART0_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = UART0_Handler &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveChar
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetRxIRQStatus
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ClearRxIRQ
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UART1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.UART1_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>UART_ClearRxIRQ</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gowin_m3_uart.o(i.UART_ClearRxIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Handler
</UL>

<P><STRONG><a name="[7a]"></a>UART_GetRxIRQStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gowin_m3_uart.o(i.UART_GetRxIRQStatus))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Handler
</UL>

<P><STRONG><a name="[7e]"></a>UART_Init</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, gowin_m3_uart.o(i.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartInit
</UL>

<P><STRONG><a name="[7b]"></a>UART_ReceiveChar</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gowin_m3_uart.o(i.UART_ReceiveChar))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgetc
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Handler
</UL>

<P><STRONG><a name="[7f]"></a>UART_SendChar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gowin_m3_uart.o(i.UART_SendChar))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[33]"></a>USER_INT0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.USER_INT0_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>USER_INT10_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.USER_INT10_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>USER_INT11_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.USER_INT11_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>USER_INT12_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.USER_INT12_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>USER_INT13_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.USER_INT13_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>USER_INT14_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.USER_INT14_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>USER_INT15_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.USER_INT15_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USER_INT1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.USER_INT1_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>USER_INT2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.USER_INT2_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>USER_INT3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.USER_INT3_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>USER_INT4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.USER_INT4_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>USER_INT5_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.USER_INT5_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>USER_INT6_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.USER_INT6_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>USER_INT7_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.USER_INT7_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>USER_INT8_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.USER_INT8_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>USER_INT9_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gowin_m3_it.o(i.USER_INT9_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>UartInit</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, app_if.o(i.UartInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UartInit &rArr; UART_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gowin_m3_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gowin_m3.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>_sys_exit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, retarget.o(i._sys_exit))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[46]"></a>fgetc</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, retarget.o(i.fgetc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fgetc
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf_char_file.o(.text)
</UL>
<P><STRONG><a name="[45]"></a>fputc</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, retarget.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_file.o(.text)
</UL>
<P><STRONG><a name="[5d]"></a>main</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = main &rArr; start_cmd_line &rArr; __0scanf &rArr; __vfscanf_char_file &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartInit
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cmd_line
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[80]"></a>start_cmd_line</STRONG> (Thumb, 244 bytes, Stack size 0 bytes, cmd_line.o(i.start_cmd_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = start_cmd_line &rArr; __0scanf &rArr; __vfscanf_char_file &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBits
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sw_edition_print
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0scanf
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4b]"></a>_get_lc_ctype</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[81]"></a>sw_edition_print</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, cmd_line.o(i.sw_edition_print))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = sw_edition_print &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOInit
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cmd_line
</UL>

<P><STRONG><a name="[48]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[49]"></a>_scanf_char_input</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
